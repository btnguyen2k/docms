# DO CMS configurations
docms {
  ## path to data directory
  ## override with env.DOCMS_DATA_DIR
  data_dir = "./dodata"
  data_dir = ${?DOCMS_DATA_DIR}

  ## Frontend config
  frontend {
    ## base uri to serve frontend assets (note: no trailing slash!).
    # override this setting with env.FRONTEND_PATH
    path = "/cms"
    path = ${?FRONTEND_PATH}

    ## base directory that stores frontend assets (note: NO trailing slash!).
    # override this setting with env.FRONTEND_DIR
    directory = "./frontend"
    directory = ${?FRONTEND_DIR}

    ## frontend's template (curently available templates: bootstrap, coderdocs and prettydocs)
    # override this setting with env.FRONTEND_TEMPLATE
    template = "bootstrap"
    template = ${?FRONTEND_TEMPLATE}
  }

  ## Tracking config
  tracking {
    ## Google tag
    # override this setting with env.GOOGLE_TAG
    gtag: ""
    gtag: ${?GOOGLE_TAG}
  }

  ## Media MIME types
  media_mime {
    # photo files
    ".jpg":  "image/jpeg",
    ".jpeg": "image/jpeg",
    ".png":  "image/png",
    ".gif":  "image/gif",
    ".svg":  "image/svg+xml",
    # music files
    ".aac":  "audio/aac",
    ".mp3":  "audio/mp3",
    ".wav":  "audio/wav",
    ".wma":  "audio/wma",
    # video files
    ".mp4":  "audio/mp4",
    ".mov":  "audio/mov",
    ".avi":  "audio/avi",
    # documents
    ".xml":  "application/xml",
    ".json": "application/json",
    ".pdf":  "application/pdf",
    ".csv":  "application/csv",
    ".tsv":  "application/tsv",
    ".doc":  "application/doc",
    ".docx": "application/docx",
    ".xls":  "application/xls",
    ".xlsx": "application/xlsx",
    ".ppt":  "application/ppt",
    ".pptx": "application/pptx",
    ".odm":  "application/odm",
    ".odt":  "application/odt",
    ".odp":  "application/odp",
    ".ods":  "application/ods",
  }
  # Override the whole media MIME types with env.MIME_TYPES
  # env.MIME_TYPES must be a valid JSON-encoded map, for example '{".jpg": "image/jpeg", ".gif": "image/gif"}'
  media_mime = ${?MIME_TYPES}
  # Add (and override some) additional media MIME types with env.MIME_TYPES_ADD
  # env.MIME_TYPES_ADD must be a valid JSON-encoded map, for example '{".mp4": "video/mp4"}'
  media_mime_add = ${?MIME_TYPES_ADD}
}

api {
  http {
    ## API configurations - HTTP endpoints
    endpoints {
      # format: {url={http-method=handler-name}}
      "/api/site" {
        get = "getSiteMeta"
      }
      "/api/topics" {
        get = "getTopics"
      }
      "/api/documents" {
        get = "getDocuments"
      }
      "/api/documents/:tid" {
        get = "getDocumentsForTopic"
      }
      "/api/document/:tid/:did" {
        get = "getDocument"
      }
      "/api/search" {
        post = "search"
      }
      "/api/tag_search" {
        post = "tagSearch"
      }
      "/api/tags" {
        get = "getTagCloud"
      }
    }
  }
}
